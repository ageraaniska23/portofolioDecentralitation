import {
  detectMethod
} from "./chunk-5BTYQC6T.js";
import {
  readContract
} from "./chunk-YL5DDJEW.js";
import {
  encodeAbiParameters
} from "./chunk-3VFLFS65.js";
import "./chunk-UUPCAKZX.js";
import "./chunk-SNMDNXY6.js";
import "./chunk-TXE47BCL.js";
import "./chunk-EWAXOTDC.js";
import "./chunk-6IMCMGLD.js";
import "./chunk-MQIGPFEC.js";
import "./chunk-3JG4JMZX.js";
import "./chunk-GDDTQ4UI.js";
import "./chunk-7MF47GW2.js";
import "./chunk-KFTJWVLQ.js";
import "./chunk-7IZG4EP5.js";
import "./chunk-SYYDPSNZ.js";
import "./chunk-MHFR2GDE.js";
import "./chunk-SUMWJFR6.js";
import "./chunk-EZ4JTQAA.js";
import "./chunk-SHWHM7JY.js";
import {
  decodeAbiParameters
} from "./chunk-HBQCTIQN.js";
import "./chunk-Z2F5LG57.js";
import "./chunk-TEQAYQEZ.js";
import "./chunk-256EKJAK.js";

// node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721A/read/isApprovedForAll.js
var FN_SELECTOR = "0xe985e9c5";
var FN_INPUTS = [
  {
    type: "address",
    name: "owner"
  },
  {
    type: "address",
    name: "operator"
  }
];
var FN_OUTPUTS = [
  {
    type: "bool"
  }
];
async function isIsApprovedForAllSupported(contract) {
  return detectMethod({
    contract,
    method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS]
  });
}
function encodeIsApprovedForAllParams(options) {
  return encodeAbiParameters(FN_INPUTS, [options.owner, options.operator]);
}
function encodeIsApprovedForAll(options) {
  return FN_SELECTOR + encodeIsApprovedForAllParams(options).slice(2);
}
function decodeIsApprovedForAllResult(result) {
  return decodeAbiParameters(FN_OUTPUTS, result)[0];
}
async function isApprovedForAll(options) {
  return readContract({
    contract: options.contract,
    method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
    params: [options.owner, options.operator]
  });
}
export {
  FN_SELECTOR,
  decodeIsApprovedForAllResult,
  encodeIsApprovedForAll,
  encodeIsApprovedForAllParams,
  isApprovedForAll,
  isIsApprovedForAllSupported
};
//# sourceMappingURL=isApprovedForAll-GZ3WRBNI.js.map
