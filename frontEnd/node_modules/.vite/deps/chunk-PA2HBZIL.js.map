{
  "version": 3,
  "sources": ["../../thirdweb/src/react/core/hooks/wallets/useActiveAccount.ts", "../../thirdweb/src/react/web/ui/ConnectWallet/constants.ts", "../../thirdweb/src/react/web/wallets/shared/LoadingScreen.tsx", "../../thirdweb/src/react/web/wallets/in-app/useInAppWalletLocale.ts", "../../thirdweb/src/react/web/wallets/shared/locale/getConnectLocale.ts", "../../thirdweb/src/react/web/ui/ConnectWallet/Modal/screen.tsx", "../../thirdweb/src/react/web/wallets/shared/ConnectWalletSocialOptions.tsx", "../../thirdweb/src/wallets/ecosystem/get-ecosystem-wallet-auth-options.ts", "../../thirdweb/src/react/web/ui/ConnectWallet/WalletTypeRowButton.tsx", "../../thirdweb/src/react/web/ui/components/TextDivider.tsx", "../../thirdweb/src/react/web/wallets/in-app/InputSelectionUI.tsx", "../../thirdweb/src/react/web/wallets/in-app/CountrySelector.tsx", "../../thirdweb/src/react/web/wallets/in-app/validateEmail.ts", "../../thirdweb/src/react/web/wallets/shared/oauthSignIn.ts"],
  "sourcesContent": ["import { useSyncExternalStore } from \"react\";\nimport { useConnectionManagerCtx } from \"../../providers/connection-manager.js\";\n\n/**\n * A hook that returns the active account\n * @returns The active `Account` or `undefined` if no active account is set.\n * @example\n * ```jsx\n * import { useActiveAccount } from \"thirdweb/react\";\n *\n * const activeAccount = useActiveAccount();\n * console.log(\"address\", activeAccount?.address);\n * ```\n * @walletConnection\n */\nexport function useActiveAccount() {\n  const manager = useConnectionManagerCtx(\"useActiveAccount\");\n  const store = manager.activeAccountStore;\n  return useSyncExternalStore(store.subscribe, store.getValue, store.getValue);\n}\n", "export const reservedScreens = {\n  main: \"main\",\n  getStarted: \"getStarted\",\n  signIn: \"signIn\",\n  showAll: \"showAll\",\n};\n\nexport const modalMaxWidthCompact = \"360px\";\n\nconst wideModalWidth = 730;\nexport const modalMaxWidthWide = `${wideModalWidth}px`;\nexport const wideModalScreenThreshold = wideModalWidth + 40;\n\nexport const wideModalMaxHeight = \"570px\";\nexport const compactModalMaxHeight = \"660px\";\n\nexport const defaultTheme = \"dark\";\n\nexport const modalCloseFadeOutDuration = 250;\n\n/**\n * @internal\n */\nexport function onModalUnmount(cb: () => void) {\n  setTimeout(cb, modalCloseFadeOutDuration + 100);\n}\n", "import { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container } from \"../../ui/components/basic.js\";\n\n/**\n * @internal\n */\nexport function LoadingScreen(props: { height?: string }) {\n  return (\n    <Container\n      style={{\n        minHeight: props.height || \"350px\",\n      }}\n      fullHeight\n      flex=\"row\"\n      center=\"both\"\n    >\n      <Spinner size=\"xl\" color=\"secondaryText\" />\n    </Container>\n  );\n}\n", "import { useEffect, useState } from \"react\";\nimport type { LocaleId } from \"../../ui/types.js\";\nimport { getInAppWalletLocale } from \"../shared/locale/getConnectLocale.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\n\n/**\n * @internal\n */\nexport function useInAppWalletLocale(localeId: LocaleId) {\n  const [locale, setLocale] = useState<InAppWalletLocale | undefined>(\n    undefined,\n  );\n\n  // TODO: move this to a useQuery hook\n  // or at the very least dedupe it?\n  useEffect(() => {\n    getInAppWalletLocale(localeId).then((l) => {\n      setLocale(l);\n    });\n  }, [localeId]);\n\n  return locale;\n}\n", "import type { LocaleId } from \"../../../ui/types.js\";\nimport type { InAppWalletLocale } from \"./types.js\";\n\n/**\n * @internal\n */\nexport async function getInAppWalletLocale(\n  localeId: LocaleId,\n): Promise<InAppWalletLocale> {\n  switch (localeId) {\n    case \"es_ES\":\n      return (await import(\"./es.js\")).default;\n    case \"ja_JP\":\n      return (await import(\"./ja.js\")).default;\n    case \"tl_PH\":\n      return (await import(\"./tl.js\")).default;\n    case \"vi_VN\":\n      return (await import(\"./vi.js\")).default;\n    case \"de_DE\":\n      return (await import(\"./de.js\")).default;\n    case \"ko_KR\":\n      return (await import(\"./kr.js\")).default;\n    case \"fr_FR\":\n      return (await import(\"./fr.js\")).default;\n    default:\n      return (await import(\"./en.js\")).default;\n  }\n}\n", "\"use client\";\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport type { Wallet } from \"../../../../../wallets/interfaces/wallet.js\";\nimport { useActiveAccount } from \"../../../../core/hooks/wallets/useActiveAccount.js\";\nimport { reservedScreens } from \"../constants.js\";\nimport type { WelcomeScreen } from \"../screens/types.js\";\n\ntype Screen = string | Wallet;\n\nexport type ScreenSetup = {\n  screen: Screen;\n  setScreen: (newSreen: Screen) => void;\n  initialScreen: Screen;\n};\n\nexport const ScreenSetupContext = /* @__PURE__ */ createContext<\n  ScreenSetup | undefined\n>(undefined);\n\n/**\n * @internal\n */\nexport function useSetupScreen(props: {\n  wallets: Wallet[];\n  size: \"compact\" | \"wide\";\n  welcomeScreen: WelcomeScreen | undefined;\n}) {\n  let initialScreen: Screen = reservedScreens.main;\n\n  const socialLogin = props.wallets.find(\n    (w) => w.id === \"embedded\" || w.id === \"inApp\",\n  );\n\n  if (props.wallets.length === 1 && props.wallets[0]) {\n    initialScreen = props.wallets[0];\n  } else if (props.size === \"wide\" && !props.welcomeScreen && socialLogin) {\n    initialScreen = socialLogin;\n  }\n\n  const [screen, setScreen] = useState<string | Wallet>(initialScreen);\n  const prevInitialScreen = useRef(initialScreen);\n  const activeAccount = useActiveAccount();\n\n  // when the initial screen changes, reset the screen to the initial screen ( if the modal is closed )\n  useEffect(() => {\n    if (initialScreen !== prevInitialScreen.current) {\n      prevInitialScreen.current = initialScreen;\n      setScreen(initialScreen);\n    }\n  }, [initialScreen]);\n\n  // if on signature screen and suddenly the wallet is disconnected, go back to the main screen\n  useEffect(() => {\n    if (!activeAccount && screen === reservedScreens.signIn) {\n      setScreen(reservedScreens.main);\n    }\n  }, [activeAccount, screen]);\n\n  return {\n    screen,\n    setScreen,\n    initialScreen,\n  };\n}\n\n/**\n * @internal\n */\nexport function useScreenContext() {\n  const ctx = useContext(ScreenSetupContext);\n  if (!ctx) {\n    throw new Error(\n      \"useScreenContext must be used within a <ScreenProvider />\",\n    );\n  }\n  return ctx;\n}\n", "\"use client\";\nimport styled from \"@emotion/styled\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useMemo, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport { getEcosystemWalletAuthOptions } from \"../../../../wallets/ecosystem/get-ecosystem-wallet-auth-options.js\";\nimport { isEcosystemWallet } from \"../../../../wallets/ecosystem/is-ecosystem-wallet.js\";\nimport { loginWithOauthRedirect } from \"../../../../wallets/in-app/web/lib/auth/oauth.js\";\nimport type { Account, Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport {\n  type AuthOption,\n  type SocialAuthOption,\n  socialAuthOptions,\n} from \"../../../../wallets/types.js\";\nimport type { EcosystemWalletId } from \"../../../../wallets/wallet-types.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport {\n  fontSize,\n  iconSize,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport {\n  emailIcon,\n  passkeyIcon,\n  phoneIcon,\n  socialIcons,\n} from \"../../../core/utils/socialIcons.js\";\nimport { setLastAuthProvider } from \"../../../core/utils/storage.js\";\nimport { useSetSelectionData } from \"../../providers/wallet-ui-states-provider.js\";\nimport { WalletTypeRowButton } from \"../../ui/ConnectWallet/WalletTypeRowButton.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { TextDivider } from \"../../ui/components/TextDivider.js\";\nimport { Container } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { InputSelectionUI } from \"../in-app/InputSelectionUI.js\";\nimport { validateEmail } from \"../in-app/validateEmail.js\";\nimport { LoadingScreen } from \"./LoadingScreen.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { openOauthSignInWindow } from \"./oauthSignIn.js\";\n\nexport type ConnectWalletSelectUIState =\n  | undefined\n  | {\n      emailLogin?: string;\n      phoneLogin?: string;\n      socialLogin?: {\n        type: SocialAuthOption;\n        connectionPromise: Promise<Account>;\n      };\n      passkeyLogin?: boolean;\n    };\n\nconst defaultAuthOptions: AuthOption[] = [\n  \"email\",\n  \"phone\",\n  \"google\",\n  \"apple\",\n  \"facebook\",\n  \"passkey\",\n];\n\nexport type ConnectWalletSocialOptionsProps = {\n  select: () => void;\n  done: () => void;\n  locale: InAppWalletLocale;\n  wallet: Wallet<EcosystemWalletId> | Wallet<\"inApp\">;\n  goBack?: () => void;\n  chain: Chain | undefined;\n  client: ThirdwebClient;\n  size: \"compact\" | \"wide\";\n};\n\n/**\n * @internal\n */\nexport const ConnectWalletSocialOptions = (\n  props: ConnectWalletSocialOptionsProps,\n) => {\n  const locale = props.locale;\n  const { wallet } = props;\n  const setData = useSetSelectionData() as (\n    value: ConnectWalletSelectUIState,\n  ) => void;\n\n  const themeObj = useCustomTheme();\n\n  const loginMethodsLabel = {\n    google: locale.signInWithGoogle,\n    facebook: locale.signInWithFacebook,\n    apple: locale.signInWithApple,\n    discord: locale.signInWithDiscord,\n    farcaster: \"Farcaster\",\n    telegram: \"Telegram\",\n  };\n\n  const { data: ecosystemAuthOptions, isLoading } = useQuery({\n    queryKey: [\"auth-options\", wallet.id],\n    queryFn: async () => {\n      if (isEcosystemWallet(wallet)) {\n        return getEcosystemWalletAuthOptions(wallet.id);\n      }\n      return null;\n    },\n    enabled: isEcosystemWallet(wallet),\n    retry: false,\n  });\n  const authOptions = isEcosystemWallet(wallet)\n    ? ecosystemAuthOptions ?? defaultAuthOptions\n    : wallet.getConfig()?.auth?.options ?? defaultAuthOptions;\n\n  const emailIndex = authOptions.indexOf(\"email\");\n  const isEmailEnabled = emailIndex !== -1;\n  const phoneIndex = authOptions.indexOf(\"phone\");\n  const isPhoneEnabled = phoneIndex !== -1;\n\n  const [manualInputMode, setManualInputMode] = useState<\n    \"email\" | \"phone\" | \"none\" | null\n  >(null);\n\n  const inputMode = useMemo(() => {\n    if (manualInputMode) {\n      return manualInputMode;\n    }\n    if (isEmailEnabled && isPhoneEnabled) {\n      return emailIndex < phoneIndex ? \"email\" : \"phone\";\n    }\n    if (isEmailEnabled) {\n      return \"email\";\n    }\n    if (isPhoneEnabled) {\n      return \"phone\";\n    }\n    return \"none\";\n  }, [isEmailEnabled, isPhoneEnabled, emailIndex, phoneIndex, manualInputMode]);\n\n  if (isEcosystemWallet(wallet) && isLoading) {\n    return <LoadingScreen />;\n  }\n\n  const passKeyEnabled = authOptions.includes(\"passkey\");\n\n  const placeholder =\n    inputMode === \"email\" ? locale.emailPlaceholder : locale.phonePlaceholder;\n  const emptyErrorMessage =\n    inputMode === \"email\" ? locale.emailRequired : locale.phoneRequired;\n\n  let type = \"text\";\n  if (inputMode === \"email\") {\n    type = \"email\";\n  } else if (inputMode === \"phone\") {\n    type = \"tel\";\n  }\n\n  const socialLogins = authOptions.filter((o) =>\n    socialAuthOptions.includes(o as SocialAuthOption),\n  );\n\n  const hasSocialLogins = socialLogins.length > 0;\n  const ecosystemInfo = isEcosystemWallet(wallet)\n    ? {\n        id: wallet.id,\n        partnerId: wallet.getConfig()?.partnerId,\n      }\n    : undefined;\n\n  // Need to trigger login on button click to avoid popup from being blocked\n  const handleSocialLogin = async (strategy: SocialAuthOption) => {\n    const walletConfig = wallet.getConfig();\n    if (\n      walletConfig &&\n      \"auth\" in walletConfig &&\n      walletConfig?.auth?.mode === \"redirect\"\n    ) {\n      return loginWithOauthRedirect({\n        authOption: strategy,\n        client: props.client,\n        ecosystem: ecosystemInfo,\n      });\n    }\n\n    try {\n      const socialLoginWindow = openOauthSignInWindow({\n        authOption: strategy,\n        themeObj,\n        client: props.client,\n        ecosystem: ecosystemInfo,\n      });\n      if (!socialLoginWindow) {\n        throw new Error(\"Failed to open login window\");\n      }\n      const connectOptions = {\n        chain: props.chain,\n        client: props.client,\n        strategy,\n        openedWindow: socialLoginWindow,\n        closeOpenedWindow: (openedWindow: Window) => {\n          openedWindow.close();\n        },\n      };\n\n      const connectPromise = isEcosystemWallet(wallet)\n        ? wallet.connect({\n            ...connectOptions,\n            ecosystem: {\n              id: wallet.id,\n              partnerId: wallet.getConfig()?.partnerId,\n            },\n          })\n        : wallet.connect(connectOptions);\n\n      await setLastAuthProvider(strategy, webLocalStorage);\n\n      setData({\n        socialLogin: {\n          type: strategy,\n          connectionPromise: connectPromise,\n        },\n      });\n\n      props.select(); // show Connect UI\n\n      // Note: do not call done() here, it will be called SocialLogin component\n      // we simply trigger the connect and save promise here - its resolution is handled in SocialLogin\n    } catch (e) {\n      console.error(`Error signing in with ${strategy}`, e);\n    }\n  };\n\n  function handlePassKeyLogin() {\n    setData({\n      passkeyLogin: true,\n    });\n    props.select();\n  }\n\n  const showOnlyIcons = socialLogins.length > 2;\n\n  return (\n    <Container\n      flex=\"column\"\n      gap=\"md\"\n      style={{\n        position: \"relative\",\n      }}\n    >\n      {/* Social Login */}\n      {hasSocialLogins && (\n        <Container\n          flex=\"row\"\n          center=\"x\"\n          gap={socialLogins.length > 4 ? \"xs\" : \"sm\"}\n          style={{\n            justifyContent: \"space-between\",\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${socialLogins.length}, 1fr)`,\n          }}\n        >\n          {socialLogins.map((loginMethod) => {\n            const imgIconSize = (() => {\n              if (!showOnlyIcons) {\n                return iconSize.md;\n              } else {\n                if (socialLogins.length > 4) {\n                  return iconSize.md;\n                }\n                return iconSize.lg;\n              }\n            })();\n\n            return (\n              <SocialButton\n                aria-label={`Login with ${loginMethod}`}\n                data-variant={showOnlyIcons ? \"icon\" : \"full\"}\n                key={loginMethod}\n                variant={\"outline\"}\n                onClick={() => {\n                  handleSocialLogin(loginMethod as SocialAuthOption);\n                }}\n              >\n                <Img\n                  src={socialIcons[loginMethod as SocialAuthOption]}\n                  width={imgIconSize}\n                  height={imgIconSize}\n                  client={props.client}\n                />\n                {!showOnlyIcons &&\n                  `${socialLogins.length === 1 ? \"Continue with \" : \"\"}${loginMethodsLabel[loginMethod as SocialAuthOption]}`}\n              </SocialButton>\n            );\n          })}\n        </Container>\n      )}\n\n      {props.size === \"wide\" &&\n        hasSocialLogins &&\n        (isEmailEnabled || isPhoneEnabled) && <TextDivider text={locale.or} />}\n\n      {/* Email/Phone Login */}\n      {isEmailEnabled && (\n        <>\n          {inputMode === \"email\" ? (\n            <InputSelectionUI\n              type={type}\n              onSelect={(value) => {\n                setData({ emailLogin: value });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"email\"\n              errorMessage={(input) => {\n                const isValidEmail = validateEmail(input.toLowerCase());\n                if (!isValidEmail) {\n                  return locale.invalidEmail;\n                }\n                return undefined;\n              }}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={props.client}\n              icon={emailIcon}\n              onClick={() => {\n                setManualInputMode(\"email\");\n              }}\n              title={locale.emailPlaceholder}\n            />\n          )}\n        </>\n      )}\n      {isPhoneEnabled && (\n        <>\n          {inputMode === \"phone\" ? (\n            <InputSelectionUI\n              format=\"phone\"\n              type={type}\n              onSelect={(value) => {\n                // removes white spaces and special characters\n                setData({ phoneLogin: value.replace(/[-\\(\\) ]/g, \"\") });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"phone\"\n              errorMessage={(_input) => {\n                // removes white spaces and special characters\n                const input = _input.replace(/[-\\(\\) ]/g, \"\");\n                const isPhone = /^[0-9]+$/.test(input);\n\n                if (!isPhone && isPhoneEnabled) {\n                  return locale.invalidPhone;\n                }\n\n                return undefined;\n              }}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={props.client}\n              icon={phoneIcon}\n              onClick={() => {\n                setManualInputMode(\"phone\");\n              }}\n              title={locale.phonePlaceholder}\n            />\n          )}\n        </>\n      )}\n\n      {passKeyEnabled && (\n        <>\n          <WalletTypeRowButton\n            client={props.client}\n            icon={passkeyIcon}\n            onClick={() => {\n              handlePassKeyLogin();\n            }}\n            title={locale.passkey}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst SocialButton = /* @__PURE__ */ styled(Button)({\n  flexGrow: 1,\n  \"&[data-variant='full']\": {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    padding: spacing.md,\n    gap: spacing.sm,\n    fontSize: fontSize.md,\n    fontWeight: 500,\n    transition: \"background-color 0.2s ease\",\n    \"&:active\": {\n      boxShadow: \"none\",\n    },\n  },\n  \"&[data-variant='icon']\": {\n    padding: spacing.sm,\n  },\n});\n", "import { getThirdwebBaseUrl } from \"../../utils/domains.js\";\nimport type { AuthOption } from \"../types.js\";\nimport type { EcosystemWalletId } from \"../wallet-types.js\";\n\n/**\n * Retrieves the specified auth options for a given ecosystem wallet, if any.\n * @param walletId The ecosystem wallet ID.\n * @returns {AuthOption[] | undefined} The auth options for the ecosystem wallet.\n * @internal\n */\nexport async function getEcosystemWalletAuthOptions(\n  walletId: EcosystemWalletId,\n): Promise<AuthOption[] | undefined> {\n  const res = await fetch(\n    `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/ecosystem-wallet`,\n    {\n      headers: {\n        \"x-ecosystem-id\": walletId,\n      },\n    },\n  );\n\n  const data = await res.json();\n\n  if (!data || data.code === \"UNAUTHORIZED\") {\n    throw new Error(\n      data.message ||\n        `Could not find ecosystem wallet with id ${walletId}, please check your ecosystem wallet configuration.`,\n    );\n  }\n\n  return data.authOptions ?? undefined;\n}\n", "import type { ThirdwebClient } from \"../../../../client/client.js\";\nimport {\n  iconSize,\n  radius,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { Img } from \"../components/Img.js\";\nimport { Container } from \"../components/basic.js\";\nimport { Button } from \"../components/buttons.js\";\n\ntype WalletTypeRowProps = {\n  client: ThirdwebClient;\n  onClick: () => void;\n  title: string;\n  icon: string;\n};\n\nexport function WalletTypeRowButton(props: WalletTypeRowProps) {\n  return (\n    <Button\n      fullWidth\n      variant=\"outline\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        padding: spacing.md,\n      }}\n      onClick={() => {\n        props.onClick();\n      }}\n    >\n      <Container flex=\"row\" gap=\"md\" center=\"y\" color=\"accentText\">\n        <Img\n          client={props.client}\n          src={props.icon}\n          width={iconSize.md}\n          height={iconSize.md}\n          loading=\"eager\"\n          style={{\n            borderRadius: radius.md,\n          }}\n        />\n        <Text color=\"primaryText\">{props.title}</Text>\n      </Container>\n    </Button>\n  );\n}\n", "\"use client\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport { fontSize, spacing } from \"../../../core/design-system/index.js\";\nimport { StyledDiv } from \"../design-system/elements.js\";\n\n/**\n *\n * @internal\n */\nexport const TextDivider = (props: {\n  text: string;\n  py?: keyof typeof spacing;\n}) => {\n  return (\n    <TextDividerEl\n      style={{\n        paddingBlock: props.py ? spacing[props.py] : 0,\n      }}\n    >\n      <span> {props.text}</span>\n    </TextDividerEl>\n  );\n};\n\nconst TextDividerEl = /* @__PURE__ */ StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: theme.colors.secondaryText,\n    fontSize: fontSize.sm,\n    \"&::before, &::after\": {\n      content: '\"\"',\n      flex: 1,\n      borderBottom: `1px solid ${theme.colors.separatorLine}`,\n    },\n    span: {\n      margin: \"0 16px\",\n    },\n  };\n});\n", "\"use client\";\nimport { ArrowRightIcon } from \"@radix-ui/react-icons\";\nimport { useState } from \"react\";\nimport {\n  iconSize,\n  radius,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { IconButton } from \"../../ui/components/buttons.js\";\nimport { Input, InputContainer } from \"../../ui/components/formElements.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { CountrySelector } from \"./CountrySelector.js\";\n\nexport function InputSelectionUI(props: {\n  onSelect: (data: string) => void;\n  placeholder: string;\n  name: string;\n  type: string;\n  errorMessage?: (input: string) => string | undefined;\n  emptyErrorMessage?: string;\n  submitButtonText: string;\n  format?: \"phone\";\n  disabled?: boolean;\n}) {\n  const [countryCodeInfo, setCountryCodeInfo] = useState(\"US +1\");\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState<string | undefined>();\n  const [showError, setShowError] = useState(false);\n\n  const handleSelect = () => {\n    setShowError(true);\n    if (!input || !!error) {\n      return;\n    }\n\n    props.onSelect(\n      props.format === \"phone\"\n        ? `+${countryCodeInfo.split(\"+\")[1]}${input}`\n        : input,\n    );\n  };\n\n  const renderingError =\n    (showError && !!error) ||\n    (!input && !!props.emptyErrorMessage && showError);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n      }}\n    >\n      <InputContainer\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n        data-error={renderingError}\n      >\n        {props.format === \"phone\" && (\n          <CountrySelector\n            countryCode={countryCodeInfo}\n            setCountryCode={setCountryCodeInfo}\n          />\n        )}\n        <Input\n          tabIndex={-1}\n          placeholder={props.placeholder}\n          style={{\n            flexGrow: 1,\n            padding: `${spacing.md} ${\n              props.format === \"phone\" ? 0 : spacing.md\n            }`,\n          }}\n          variant=\"transparent\"\n          type={props.type}\n          name={props.name}\n          value={input}\n          disabled={props.disabled}\n          onChange={(e) => {\n            setInput(e.target.value);\n            if (props.errorMessage) {\n              setError(props.errorMessage(e.target.value));\n            } else {\n              setError(undefined);\n            }\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleSelect();\n            }\n          }}\n        />\n        <IconButton\n          onClick={handleSelect}\n          disabled={props.disabled}\n          style={{\n            padding: spacing.md,\n            borderRadius: `0 ${radius.lg} ${radius.lg} 0`,\n          }}\n        >\n          <ArrowRightIcon width={iconSize.md} height={iconSize.md} />\n        </IconButton>\n      </InputContainer>\n\n      {showError && error && (\n        <>\n          <Spacer y=\"xs\" />\n          <Text color=\"danger\" size=\"sm\">\n            {error}\n          </Text>\n        </>\n      )}\n\n      {!(showError && error) &&\n        !input &&\n        props.emptyErrorMessage &&\n        showError && (\n          <>\n            <Spacer y=\"xs\" />\n            <Text color=\"danger\" size=\"sm\">\n              {props.emptyErrorMessage}\n            </Text>\n          </>\n        )}\n    </div>\n  );\n}\n", "\"use client\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useRef } from \"react\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport {\n  fontSize,\n  radius,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport { StyledOption, StyledSelect } from \"../../ui/design-system/elements.js\";\n\nexport function CountrySelector({\n  countryCode,\n  setCountryCode,\n}: {\n  countryCode: string;\n  setCountryCode: React.Dispatch<React.SetStateAction<string>>;\n}) {\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const { data: supportedCountries } = useQuery({\n    queryKey: [\"supported-sms-countries\"],\n    queryFn: async () => {\n      const { supportedSmsCountries } = await import(\n        \"./supported-sms-countries.js\"\n      );\n      return supportedSmsCountries;\n    },\n  });\n\n  const supportedCountriesForSms = supportedCountries ?? [\n    {\n      countryIsoCode: \"US\",\n      countryName: \"United States\",\n      phoneNumberCode: 1,\n    },\n  ];\n\n  return (\n    <>\n      <Select\n        ref={selectRef}\n        name=\"countries\"\n        id=\"countries\"\n        value={countryCode}\n        onChange={(e) => {\n          setCountryCode(e.target.value);\n        }}\n        style={{\n          paddingLeft: spacing.md,\n          paddingRight: \"0\",\n        }}\n      >\n        <Option\n          style={{\n            display: \"none\",\n          }}\n          value={countryCode}\n        >\n          {countryCode}\n        </Option>\n        {supportedCountriesForSms.map((country) => {\n          return (\n            <Option\n              key={country.countryIsoCode}\n              value={`${country.countryIsoCode} +${country.phoneNumberCode}`}\n            >\n              {country.countryName} +{country.phoneNumberCode}{\" \"}\n            </Option>\n          );\n        })}\n      </Select>\n    </>\n  );\n}\n\nconst Option = /* @__PURE__ */ StyledOption(() => {\n  const theme = useCustomTheme();\n  return {\n    color: theme.colors.primaryText,\n    background: theme.colors.modalBg,\n    transition: \"background 0.3s ease\",\n    \"&:hover\": {\n      background: theme.colors.tertiaryBg,\n    },\n  };\n});\n\nconst Select = /* @__PURE__ */ StyledSelect((_) => {\n  const theme = useCustomTheme();\n  return {\n    fontSize: fontSize.sm,\n    display: \"block\",\n    padding: spacing.sm,\n    boxSizing: \"border-box\",\n    outline: \"none\",\n    border: \"none\",\n    borderRadius: radius.lg,\n    color: theme.colors.primaryText,\n    WebkitAppearance: \"none\",\n    appearance: \"none\",\n    cursor: \"pointer\",\n    background: \"transparent\",\n    \"&::placeholder\": {\n      color: theme.colors.secondaryText,\n    },\n    \"&[disabled]\": {\n      cursor: \"not-allowed\",\n    },\n    minWidth: \"0px\",\n    maxWidth: \"90px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  };\n});\n", "// A super basic email validation function that is very forgiving to allow for a wide range emails\nexport function validateEmail(str: string) {\n  // <string> + @ + <string> + . + <string>\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n\n  return emailRegex.test(str.replace(/\\+/g, \"\"));\n}\n", "import type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { getSocialAuthLoginPath } from \"../../../../wallets/in-app/core/authentication/getLoginPath.js\";\nimport type { InAppWalletSocialAuth } from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Ecosystem } from \"../../../../wallets/in-app/web/types.js\";\nimport type { Theme } from \"../../../core/design-system/index.js\";\n\nfunction getBodyTitle(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"google\":\n      return \"Sign In - Google Accounts\";\n    default:\n      return `Sign In - ${authOption\n        .slice(0, 1)\n        .toUpperCase()}${authOption.slice(1)}`;\n  }\n}\n\nfunction getWidthAndHeight(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"facebook\":\n      return { width: 715, height: 555 };\n    default:\n      return { width: 350, height: 500 };\n  }\n}\n\nfunction getOauthLoginPath(\n  authOption: InAppWalletSocialAuth,\n  client: ThirdwebClient,\n  ecosystem?: Ecosystem,\n) {\n  switch (authOption) {\n    case \"apple\":\n    case \"facebook\":\n    case \"google\":\n    case \"farcaster\":\n    case \"telegram\":\n    case \"discord\":\n      return getSocialAuthLoginPath({ authOption, client, ecosystem });\n    default:\n      return \"\";\n  }\n}\n\n/**\n * @internal\n */\nexport function openOauthSignInWindow({\n  authOption,\n  themeObj,\n  client,\n  ecosystem,\n}: {\n  authOption: InAppWalletSocialAuth;\n  themeObj: Theme;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n}) {\n  // open the popup in the center of the screen\n  const { height, width } = getWidthAndHeight(authOption);\n  const top = (window.innerHeight - height) / 2;\n  const left = (window.innerWidth - width) / 2;\n\n  const win = window.open(\n    getOauthLoginPath(authOption, client, ecosystem),\n    undefined,\n    `width=${width}, height=${height}, top=${top}, left=${left}`,\n  );\n  if (win) {\n    const title = getBodyTitle(authOption);\n    win.document.title = title;\n    win.document.body.innerHTML = spinnerWindowHtml;\n    win.document.body.style.background = themeObj.colors.modalBg;\n    win.document.body.style.color = themeObj.colors.accentText;\n  }\n\n  // close it when current window is closed or refreshed\n  if (win) {\n    window.addEventListener(\"beforeunload\", () => {\n      win?.close();\n    });\n  }\n\n  return win;\n}\n\nconst spinnerWindowHtml = `\n<svg class=\"loader\" viewBox=\"0 0 50 50\">\n  <circle\n    cx=\"25\"\n    cy=\"25\"\n    r=\"20\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"4\"\n  />\n</svg>\n\n<style>\n  body,\n  html {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loader {\n    width: 50px;\n    height: 50px;\n    animation: spin 2s linear infinite;\n  }\n\n  .loader circle {\n    animation: loading 1.5s linear infinite;\n  }\n\n  @keyframes loading {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n        }\n  }\n</style>\n`;\n"],
  "mappings": "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",
  "names": ["_jsx", "import_react", "import_react", "import_react", "_jsx", "_jsxs", "_jsx", "_jsxs", "import_react", "import_react", "_jsx", "_Fragment", "_jsxs", "_jsxs", "_jsx", "_Fragment", "_jsx", "_a", "_b", "_jsxs", "_Fragment"]
}
