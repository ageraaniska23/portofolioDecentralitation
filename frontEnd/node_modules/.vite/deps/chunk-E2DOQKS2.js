import {
  eth_getBalance
} from "./chunk-OULA2JUL.js";
import {
  toTokens
} from "./chunk-HAADYJEF.js";
import {
  getContract
} from "./chunk-V4R6W4TB.js";
import {
  getRpcClient
} from "./chunk-KFTJWVLQ.js";
import {
  getChainDecimals,
  getChainNativeCurrencyName,
  getChainSymbol
} from "./chunk-SYYDPSNZ.js";

// node_modules/thirdweb/dist/esm/wallets/utils/getWalletBalance.js
async function getWalletBalance(options) {
  const { address, client, chain, tokenAddress } = options;
  if (tokenAddress) {
    const { getBalance } = await import("./getBalance-WPERJJJA.js");
    return getBalance({
      contract: getContract({ client, chain, address: tokenAddress }),
      address
    });
  }
  const rpcRequest = getRpcClient({ client, chain });
  const [nativeSymbol, nativeDecimals, nativeName, nativeBalance] = await Promise.all([
    getChainSymbol(chain),
    getChainDecimals(chain),
    getChainNativeCurrencyName(chain),
    eth_getBalance(rpcRequest, { address })
  ]);
  return {
    value: nativeBalance,
    decimals: nativeDecimals,
    displayValue: toTokens(nativeBalance, nativeDecimals),
    symbol: nativeSymbol,
    name: nativeName
  };
}

export {
  getWalletBalance
};
//# sourceMappingURL=chunk-E2DOQKS2.js.map
