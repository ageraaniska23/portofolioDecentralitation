import {
  UserWalletStatus
} from "./chunk-SPYT4SSF.js";
import {
  getOrCreateInAppWalletConnector
} from "./chunk-M7XADWCR.js";

// node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/index.js
async function getInAppWalletConnector(client, ecosystem) {
  return getOrCreateInAppWalletConnector(client, async (client2) => {
    const { InAppWebConnector } = await import("./web-connector-4II4MOMG.js");
    return new InAppWebConnector({
      client: client2,
      ecosystem
    });
  }, ecosystem);
}
async function getAuthenticatedUser(options) {
  const { client } = options;
  const connector = await getInAppWalletConnector(client);
  const user = await connector.getUser();
  switch (user.status) {
    case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {
      return user;
    }
  }
  return void 0;
}
async function getUserEmail(options) {
  const user = await getAuthenticatedUser(options);
  if (user && "email" in user.authDetails) {
    return user.authDetails.email;
  }
  return void 0;
}
async function getUserPhoneNumber(options) {
  const user = await getAuthenticatedUser(options);
  if (user && "phoneNumber" in user.authDetails) {
    return user.authDetails.phoneNumber;
  }
  return void 0;
}
async function preAuthenticate(args) {
  const connector = await getInAppWalletConnector(args.client, args.ecosystem);
  return connector.preAuthenticate(args);
}
async function authenticate(args) {
  const connector = await getInAppWalletConnector(args.client, args.ecosystem);
  if (args.redirect && connector.authenticateWithRedirect)
    return connector.authenticateWithRedirect(args.strategy);
  return connector.authenticate(args);
}

export {
  getAuthenticatedUser,
  getUserEmail,
  getUserPhoneNumber,
  preAuthenticate,
  authenticate
};
//# sourceMappingURL=chunk-QNGRS3PX.js.map
