import { useState } from "react";
import { polygon } from "../../../../../../../chains/chain-definitions/polygon.js";
import { useActiveWalletChain } from "../../../../../../core/hooks/wallets/useActiveWalletChain.js";
import { useDebouncedValue } from "../../../../hooks/useDebouncedValue.js";
import { NATIVE_TOKEN } from "../../nativeToken.js";
import { defaultSelectedCurrency } from "../fiat/currencies.js";
// handle states for token and chain selection
export function useUISelectionStates(options) {
    const activeChain = useActiveWalletChain();
    const { payOptions, supportedDestinations } = options;
    // buy token amount ---------------------------------------------------------
    // NOTE - for transaction / direct payment modes, the token amount is set when the user tap continue
    const prefillBuy = payOptions?.prefillBuy;
    const initialTokenAmount = prefillBuy?.amount || "";
    const [tokenAmount, setTokenAmount] = useState(initialTokenAmount);
    const deferredTokenAmount = useDebouncedValue(tokenAmount, 300);
    // --------------------------------------------------------------------------
    // Destination chain and token selection -----------------------------------
    const [toChain, setToChain] = useState(
    // use prefill chain if available
    prefillBuy?.chain ||
        (payOptions.mode === "transaction" && payOptions.transaction?.chain) ||
        (payOptions.mode === "direct_payment" && payOptions.paymentInfo?.chain) ||
        // use active chain if its supported as destination
        supportedDestinations.find((x) => x.chain.id === activeChain?.id)
            ?.chain ||
        // default to polygon
        polygon);
    const [toToken, setToToken] = useState(prefillBuy?.token ||
        (payOptions.mode === "direct_payment" && payOptions.paymentInfo.token) ||
        NATIVE_TOKEN);
    // --------------------------------------------------------------------------
    // Source token and chain selection ---------------------------------------------------
    const [fromChain, setFromChain] = useState(
    // use prefill chain if available
    (payOptions.buyWithCrypto !== false &&
        payOptions.buyWithCrypto?.prefillSource?.chain) ||
        (payOptions.mode === "transaction" && payOptions.transaction?.chain) ||
        (payOptions.mode === "direct_payment" && payOptions.paymentInfo?.chain) ||
        // default to polygon
        polygon);
    const [fromToken, setFromToken] = useState(
    // use prefill token if available
    (payOptions.buyWithCrypto !== false &&
        payOptions.buyWithCrypto?.prefillSource?.token) ||
        (payOptions.mode === "direct_payment" && payOptions.paymentInfo.token) ||
        // default to native token
        NATIVE_TOKEN);
    // --------------------------------------------------------------------------
    // stripe only supports USD, so not using a state right now
    const [selectedCurrency, setSelectedCurrency] = useState(defaultSelectedCurrency);
    return {
        tokenAmount,
        setTokenAmount,
        toChain,
        setToChain,
        deferredTokenAmount,
        fromChain,
        setFromChain,
        toToken,
        setToToken,
        fromToken,
        setFromToken,
        selectedCurrency,
        setSelectedCurrency,
    };
}
//# sourceMappingURL=useUISelectionStates.js.map