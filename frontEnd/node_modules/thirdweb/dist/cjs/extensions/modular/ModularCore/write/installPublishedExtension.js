"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.installPublishedExtension = installPublishedExtension;
const bootstrap_js_1 = require("../../../../contract/deployment/utils/bootstrap.js");
const installExtension_js_1 = require("../../__generated__/ModularCore/write/installExtension.js");
/**
 * Install a published extension on a modular contract
 * @param options - The options for installing a published extension
 * @returns A prepared transaction to send
 * @extension MODULAR
 * @example
 * ```ts
 * import { installPublishedExtension } from "thirdweb/extensions/modular";
 * const transaction = installPublishedExtension({
 *  client,
 *  chain,
 *  account,
 *  contract,
 *  extensionName: "MyExtension",
 *  publisherAddress: "0x...",
 * });
 * await sendTransaction({ transaction, account });
 * ```
 */
function installPublishedExtension(options) {
    const { client, chain, account, contract, extensionName, constructorParams, publisherAddress, extensionData, } = options;
    return (0, installExtension_js_1.installExtension)({
        contract,
        asyncParams: async () => {
            const deployedExtension = await (0, bootstrap_js_1.getOrDeployInfraForPublishedContract)({
                chain,
                client,
                account,
                contractId: extensionName,
                constructorParams: constructorParams || [],
                publisher: publisherAddress,
            });
            return {
                extension: deployedExtension.implementationContract.address,
                data: extensionData || "0x",
            };
        },
    });
}
//# sourceMappingURL=installPublishedExtension.js.map